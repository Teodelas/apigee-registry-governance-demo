steps:
- id: "Authenticate to gcloud"
  name: gcr.io/cloud-builders/gcloud
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      gcloud auth application-default print-access-token > /workspace/creds

- id: "Install Dependencies"
  name: node:12
  entrypoint: npm
  args: ['install', '--silent', '--no-fund']

- id: "Static Code Analysis"
  name: node:12
  entrypoint: npm
  args: ['run', 'lint']

- id: "Create/Update API in Registry"
  #name: 'ghcr.io/apigee/registry-linters:main'
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds) 
      registry rpc update-api --api.name projects/$PROJECT_ID/locations/global/apis/translate --api.display_name Translate --allow_missing

- id: "Create/Update API Version in Registry"
  #name: 'ghcr.io/apigee/registry-linters:main'
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds) 
      registry rpc update-api-version --api_version.name projects/$PROJECT_ID/locations/global/apis/translate/versions/v3beta1 --api_version.display_name v3beta1 --allow_missing

- id: "Create/Update API Version Spec in Registry"
  #name: 'ghcr.io/apigee/registry-linters:main'
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds)
      registry rpc update-api-spec --api_spec.filename=openapi.yaml --api_spec.name=projects/$PROJECT_ID/locations/global/apis/translate/versions/v3beta1/specs/openapi.yaml --api_spec.contents `cat openapi.yaml | gzip --stdout | xxd -p | tr -d '\n'` --api_spec.mime_type "application/x.openapi+gzip;version=3" --json --allow_missing

- id: "Update Registry Dependencies"
  #name: 'ghcr.io/apigee/registry-linters:main'
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds)
      export APG_REGISTRY_ADDRESS=apigeeregistry.googleapis.com:443
      registry apply -f registry -R --parent=projects/$PROJECT_ID/locations/global

- id: "Resolve Apigee Registry"
  #name: 'ghcr.io/apigee/registry-linters:main'
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds)
      export APG_REGISTRY_ADDRESS=apigeeregistry.googleapis.com:443
      # For generating lint results
      registry resolve projects/$PROJECT_ID/locations/global/artifacts/demo-manifest --jobs 1
      sleep 5
      # For generating scores
      registry resolve projects/$PROJECT_ID/locations/global/artifacts/demo-manifest --jobs 1
      sleep 5
      # For generating scorecards
      registry resolve projects/$PROJECT_ID/locations/global/artifacts/demo-manifest --jobs 1

- id: "Fetch Spec scorecard and lint errors"
  name: 'gcr.io/$PROJECT_ID/custom-linter:latest'
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      export APG_REGISTRY_TOKEN=$(cat /workspace/creds)
      export APG_REGISTRY_ADDRESS=apigeeregistry.googleapis.com:443
      registry get projects/$PROJECT_ID/locations/global/apis/translate/versions/v3beta1/specs/openapi.yaml/artifacts/conformance-apihub-styleguide --contents
      registry get projects/$PROJECT_ID/locations/global/apis/translate/versions/v3beta1/specs/openapi.yaml/artifacts/scorecard-lint-summary --contents
  